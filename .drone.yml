kind: pipeline
name: default
type: docker


steps:
  - name: tests
    image: "golang:1.20"
    environment:
      COVERALLS_TOKEN:
        from_secret: coveralls-token
    commands:
      - 'go vet ./...'
      - "go build"
      - "go test -v -covermode=atomic -cover -race -coverprofile=coverage.txt"
      - "go install github.com/mattn/goveralls@v0.0.11"
      - "/go/bin/goveralls -v -coverprofile=coverage.txt -service=drone.io"
      - 'echo " ! gofmt -d *.go 2>&1 | read " | bash'
    when:
      event:
        - push
        - pull_request


  - name: test-docker-build
    image: plugins/docker
    settings:
      repo: oliver006/drone-cloud-run
      tags: "latest"
      debug: true
      dry_run: true
      build_args:
        - 'TAG=test'
        - 'SHA1=${DRONE_COMMIT_SHA}'
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - push
        - pull_request


  - name: lint
    image: golangci/golangci-lint:latest-alpine
    pull: always
    commands:
      - apk add --update make
      - golangci-lint run --tests=false --exclude-use-default
      - golangci-lint run -D=errcheck   --exclude-use-default
    when:
      event:
        - pull_request
        - push
        - tag
        

  - name: on-tag-build-and-publish-new-drone-image
    image: plugins/docker
    settings:
      repo: oliver006/drone-cloud-run
      tags: "latest,${DRONE_TAG}"
      debug: true
      build_args:
        - 'TAG=${DRONE_TAG}'
        - 'SHA1=${DRONE_COMMIT_SHA}'
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
    when:
      event:
        - tag
